# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

import json

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util

class Visit(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """
    
    def __init__(self, person_mac=None, date=None, time=None):  # noqa: E501
        """Visit - a model defined in OpenAPI

        :param person_mac: The person_mac of this Visit.  # noqa: E501
        :type person_mac: List[str]
        :param date: The date of this Visit.  # noqa: E501
        :type date: str
        :param time: The time of this Visit.  # noqa: E501
        :type time: str
        """
        self.openapi_types = {
            'person_mac': List[str],
            'date': str,
            'time': str
        }

        self.attribute_map = {
            'person_mac': 'person_MAC',
            'date': 'date',
            'time': 'time'
        }

        self._person_mac = person_mac
        self._date = date
        self._time = time

    def __repr__(self):
        visit = { "person_mac": self.person_mac, 
                    "date": self.date, 
                    "time": self.time
                }
        return json.dumps(visit)

    @classmethod
    def from_dict(cls, dikt) -> 'Visit':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Visit of this Visit.  # noqa: E501
        :rtype: Visit
        """
        return util.deserialize_model(dikt, cls)

    @property
    def person_mac(self):
        """Gets the person_mac of this Visit.


        :return: The person_mac of this Visit.
        :rtype: List[str]
        """
        return self._person_mac

    @person_mac.setter
    def person_mac(self, person_mac):
        """Sets the person_mac of this Visit.


        :param person_mac: The person_mac of this Visit.
        :type person_mac: List[str]
        """

        self._person_mac = person_mac

    @property
    def date(self):
        """Gets the date of this Visit.


        :return: The date of this Visit.
        :rtype: str
        """
        return self._date

    @date.setter
    def date(self, date):
        """Sets the date of this Visit.


        :param date: The date of this Visit.
        :type date: str
        """

        self._date = date

    @property
    def time(self):
        """Gets the time of this Visit.


        :return: The time of this Visit.
        :rtype: str
        """
        return self._time

    @time.setter
    def time(self, time):
        """Sets the time of this Visit.


        :param time: The time of this Visit.
        :type time: str
        """

        self._time = time
